/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-06-13 06:37:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Com.jspcrud.UserDao;
import Com.jspcrud.User;

public final class editform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Com.jspcrud.User");
    _jspx_imports_classes.add("Com.jspcrud.UserDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("      \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("body{\r\n");
      out.write("background-image: url(./images/main6.jpg);\r\n");
      out.write("background-repeat: no-repeat;\r\n");
      out.write("background-size: cover;\r\n");
      out.write("}</style>\r\n");
      out.write("<body>  \r\n");
      out.write("\r\n");
      out.write("  \r\n");
  
String id=request.getParameter("id");  
User u=UserDao.getRecordById(Integer.parseInt(id));  

      out.write("  \r\n");
      out.write("  \r\n");
      out.write("<h1>Edit Form</h1>  \r\n");
      out.write("<form action=\"edituser.jsp\" method=\"post\">  \r\n");
      out.write("<input type=\"hidden\" name=\"id\" value=\"");
      out.print(u.getId() );
      out.write("\"/>  \r\n");
      out.write("<table>  \r\n");
      out.write("<tr><td>Name:</td><td>  \r\n");
      out.write("<input type=\"text\" name=\"name\" value=\"");
      out.print( u.getName());
      out.write("\"/></td></tr>  \r\n");
      out.write("<tr><td>Password:</td><td>  \r\n");
      out.write("<input type=\"password\" name=\"password\" value=\"");
      out.print( u.getPassword());
      out.write("\"/></td></tr>  \r\n");
      out.write("<tr><td>Email:</td><td>  \r\n");
      out.write("<input type=\"email\" name=\"email\" value=\"");
      out.print( u.getEmail());
      out.write("\"/></td></tr>  \r\n");
      out.write("<tr><td>Sex:</td><td>  \r\n");
      out.write("<input type=\"radio\" name=\"sex\" value=\"male\"/>Male   \r\n");
      out.write("<input type=\"radio\" name=\"sex\" value=\"female\"/>Female </td></tr>  \r\n");
      out.write("<tr><td>Country:</td><td>  \r\n");
      out.write("<select name=\"country\">  \r\n");
      out.write("<option>India</option>  \r\n");
      out.write("<option>Pakistan</option>  \r\n");
      out.write("<option>Afghanistan</option>  \r\n");
      out.write("<option>Berma</option>  \r\n");
      out.write("<option>Other</option>  \r\n");
      out.write("</select>  \r\n");
      out.write("</td></tr>  \r\n");
      out.write("<tr><td colspan=\"2\"><input type=\"submit\" value=\"Edit User\"/></td></tr>  \r\n");
      out.write("</table>  \r\n");
      out.write("</form>  \r\n");
      out.write("  \r\n");
      out.write("</body> \r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
